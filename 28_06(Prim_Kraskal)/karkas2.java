/**
 *
 Максимальное время работы на одном тесте:	5 секунд
 Входные данные
 На вход программы поступает число N (от 2 до 100) и матрица смежности полного неориентированного взвешенного графа (полный граф – граф, в котором есть ребра между всеми парами вершин). Все веса ребер – натуральные числа от 1 до 1000. Далее дано N чисел, каждое из которых либо 0, либо 1 – считается, что эти числа записаны в вершинах. Гарантируется, что есть хотя бы один 0 и хотя бы одна 1.

 Выходные данные
 Найдите и выведите  такие две вершины, что:

 в первой из них стоит 0;
 во второй из них стоит 1;
 вес ребра между этими вершинами минимально возможный.
 Если таких пар несколько, выведите любую из них.
 Примеры
 входные данные
 3
 0 1 2
 1 0 4
 2 4 0
 1 0 0
 выходные данные
 2 1
 */

import java.util.Scanner;
import java.util.Arrays;
public class karkas2 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[][] Graf = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                Graf[i][j] = in.nextInt();
            }
        }

        int [] v = new int[n];
        for (int i = 0; i <n; i++){
            v[i] = in.nextInt();

        }

        int begin = 0;
        int end = 0;
        int dist = Integer.MAX_VALUE;
        for (int i = 0; i <n; i++){
            if (v[i] ==0){
                for (int j = 0; j <n; j++){
                    if (v[j] == 1 && Graf[i][j] < dist){
                        begin = i+1;
                        end = j+1;
                        dist = Graf[i][j];

                    }
                }


            }
        }
        System.out.println(begin + " "+ end);


    }
}
